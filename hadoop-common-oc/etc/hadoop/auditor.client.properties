#pipeline name,configured in log4j.properties as log4j.appender.auditor.config= auditor.client.properties
oci.auditor.com.ailk.oci.auditor.pipeline.config.service.name=auditor-hdfs-plugin
oci.auditor.com.ailk.oci.auditor.pipeline.config.queue.full.policy=shutdown
oci.auditor.com.ailk.oci.auditor.pipeline.config.queue.size=256

#pipeline.OutTask
oci.auditor.com.ailk.oci.auditor.pipeline.config.out.batch.size =64
oci.auditor.com.ailk.oci.auditor.pipeline.config.out.batch.interval =300

#EventUploadProcessor,config to server url/server which receive the auditer event and save them
#oci.navigator.com.ailk.oci.navigator.pipeline.config.processor.upload.server.url=http://10.1.253.177:8080/server
 
#DuplicateFilter
#com.ailk.oci.auditor.pipeline.processor.in.filter.duplicate.debug = true
#com.ailk.oci.auditor.pipeline.processor.in.filter.duplicate.window.size = 1024
#com.ailk.oci.auditor.pipeline.processor.in.filter.duplicate.rule = package com.ailk.oci.navigator.plugin.audit.pipeline.processor.in.filter.field  \nimport com.ailk.oci.navigator.protocol.event.pipeline.avro.*;\nimport  com.ailk.oci.navigator.pipeline.processor.in.filter.DuplicateFilter.CandidateElement;\nglobal com.ailk.oci.navigator.pipeline.processor.in.filter.DuplicateFilter filter \nrule "Hdfs User filter"\n dialect "mvel"\n when\n c\:  CandidateElement(element\#Event.event instanceof HdfsEvent,user\:element\#Event.user,localTime\:element\#Event.localTime,operation\:element\#Event.operation,src\:element\#Event.event\#HdfsEvent.src) \n then\n filter.duplicateCheck(c,localTime,4000,[user,operation,src])\nend\n 


#FieldFilter
#com.ailk.oci.auditor.pipeline.processor.in.filter.field.rule =package com.ailk.oci.auditor.plugin.audit.pipeline.processor.in.filter.field  \nimport com.ailk.oci.auditor.protocol.event.pipeline.avro.*;\nimport com.ailk.oci.auditor.pipeline.processor.in.filter.FieldFilter.CandidateElement;\nrule "Hdfs User filter"\n dialect "mvel"\n when\n c: CandidateElement( element#Event.user == "user1" )\n then\n c.setAction("DISCARD")\nend\n

